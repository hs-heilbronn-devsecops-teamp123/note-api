name: CI Pipeline

# This workflow is triggered on pull requests (or pushes to the main branch)
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest # Use Ubuntu as the runner environment

    strategy:
      max-parallel: 1 # Limit to 1 parallel job, but tests will run on multiple CPUs

    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python (choose the appropriate version)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "pip"

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt && pip install -r requirements-dev.txt # Adjust if you have a different requirements file
          pip install pytest pytest-cov

      - name: Run tests
        run: |
          pytest --cov=note_api --cov-report=xml --cov-report=term-missing --disable-warnings

      # Step 5: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      # Step 6: Run Snyk security scan
      - name: Run Snyk security scan
        uses: snyk/actions/python@v2 # Snyk action for Python
        with:
          snyk-token: ${{ secrets.SNYK_TOKEN }} # Provide the Snyk token for authentication
        continue-on-error: true # Optionally set this to continue the pipeline even if vulnerabilities are found
